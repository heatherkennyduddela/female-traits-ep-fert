nest.mat.sum <- rbind(nest.mat, c(NA, ColSums))
View(nest.mat.sum)
library(ggplot2)
# bar plot to see when max number of active nests occur
ggplot(nest.mat.sum[ 11, ], aes(x=nest.mat.sum[ 11, ])) + geom_bar()
toplot <- as.data.frame(date = ymd(colnames(nest.mat[-1])),
active = ColSums)
toplot <- data.frame(date = ymd(colnames(nest.mat[-1])),
active = ColSums)
View(toplot)
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_bar()
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_point()
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_point() + geom_line()
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"))
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
max(ColSums)
mb.max <- max(ColSums)
chr <- read.csv("Colorado Horse Rescue 2022_nest checks.csv")
View(chr)
chr <- read.csv("Colorado Horse Rescue 2022_nest checks.csv")
View(mb)
# get rid of first and third rows which just indicates which dates were checked
chr2 <- mb[-c(2),]
# check cells for "CI" and "X"
chr.active.index <- as.data.frame(which(chr2 == "CI" |
chr2 == "X" |
chr2=="x", arr.ind = T))
View(chr.active.index)
View(chr2)
# get rid of first and third rows which just indicates which dates were checked
chr2 <- chr[-c(2),]
View(chr2)
# check cells for "CI" and "X"
chr.active.index <- as.data.frame(which(chr2 == "CI" |
chr2 == "X" |
chr2=="x", arr.ind = T))
View(chr.active.index)
chr.active <- chr2[c(1,unique(active.index$row)),]
colnames(chr.active)[2:155] <- chr.active[1,2:155]
View(chr.active)
chr.active <- chr2[c(1,unique(chr.active.index$row)),]
colnames(chr.active)[2:155] <- chr.active[1,2:155]
View(chr.active)
# for each active nest, pull out CI dates and X dates
# storage
chr.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
View(chr.active)
nests <- length(chr.active$Checked.)-1
nests.chr <- length(chr.active$Checked.)-1
i=1
# get CI dates
index.ci <- which(chr.active[i,] == "CI")
dates.ci <- colnames(chr.active)[index.ci]
# get CI dates
index.ci <- which(chr.active[i,] == "CI")
chr.active[i,]
i=2
# get CI dates
index.ci <- which(chr.active[i,] == "CI")
dates.ci <- colnames(chr.active)[index.ci]
# get inactive dates
index.x <- which(chr.active[i,] == "X" | chr.active[i,]=="x")
dates.x <- colnames(chr.active[index.x])
# number of needed rows
size <- length(index.ci)
# fill in storage
dates.temp <- data.frame(nest=rep(NA,size), CI.date=rep(NA,size),
X.date=rep(NA,size))
View(dates.temp)
dates.temp$nest <- chr.active[i,1]
dates.temp$CI.date <- dates.ci
dates.temp$X.date <- dates.x
View(dates.temp)
chr <- read.csv("Colorado Horse Rescue 2022_nest checks.csv")
# get rid of first and third rows which just indicates which dates were checked
chr2 <- chr[-c(2),]
# check cells for "CI" and "X"
chr.active.index <- as.data.frame(which(chr2 == "CI" |
chr2 == "X" |
chr2=="x", arr.ind = T))
chr.active <- chr2[c(1,unique(chr.active.index$row)),]
colnames(chr.active)[2:155] <- chr.active[1,2:155]
# for each active nest, pull out CI dates and X dates
# storage
chr.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
nests.chr <- length(chr.active$Checked.)-1
View(chr.active)
for (i in 2:nests) {
# get CI dates
index.ci <- which(chr.active[i,] == "CI")
dates.ci <- colnames(chr.active)[index.ci]
# get inactive dates
index.x <- which(chr.active[i,] == "X" | chr.active[i,]=="x")
dates.x <- colnames(chr.active[index.x])
# number of needed rows
size <- length(index.ci)
# fill in storage
dates.temp <- data.frame(nest=rep(NA,size), CI.date=rep(NA,size),
X.date=rep(NA,size))
dates.temp$nest <- chr.active[i,1]
dates.temp$CI.date <- dates.ci
dates.temp$X.date <- dates.x
# combine with external storage
chr.dates <- rbind(chr.dates, dates.temp)
}
View(chr.dates)
View(chr.dates)
str(chr.active)
# remove problem nests, but include them in final count
# nest 36 became active but then couldn't be checked for the rest of the season
chr.active2 <- subset(chr.active, chr.active$Checked.!="36")
# for each active nest, pull out CI dates and X dates
# storage
chr.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
nests.chr <- length(chr.active2$Checked.)-1
for (i in 2:nests) {
# get CI dates
index.ci <- which(chr.active2[i,] == "CI")
dates.ci <- colnames(chr.active2)[index.ci]
# get inactive dates
index.x <- which(chr.active2[i,] == "X" | chr.active2[i,]=="x")
dates.x <- colnames(chr.active2[index.x])
# number of needed rows
size <- length(index.ci)
# fill in storage
dates.temp <- data.frame(nest=rep(NA,size), CI.date=rep(NA,size),
X.date=rep(NA,size))
dates.temp$nest <- chr.active2[i,1]
dates.temp$CI.date <- dates.ci
dates.temp$X.date <- dates.x
# combine with external storage
chr.dates <- rbind(chr.dates, dates.temp)
}
View(chr.dates)
# remove extra row from dates
chr.dates2 <- chr.dates[-1,]
View(chr.dates2)
View(chr.dates)
View(chr.dates2)
chr.dates2$CI.date <- as.Date(as.factor(chr.dates2$CI.date), format="%d-%b-%y")
View(chr.dates2)
View(chr.dates)
chr.dates2$X.date <- as.Date(as.factor(chr.dates2$X.date), format="%d-%b-%y")
# make matrix where columns are days and rows are nests
chr.nest.mat <- as.data.frame(matrix(nrow=nests, ncol=155, 0))
colnames(chr.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-16"),by=1)))
chr.nest.mat[,1] <- chr.active2$Checked.[2:60]
View(chr.active2)
View(chr.nest.mat)
View(chr.nest.mat)
nests.chr <- length(chr.active2$Checked.)-1
# make matrix where columns are days and rows are nests
chr.nest.mat <- as.data.frame(matrix(nrow=nests.chr, ncol=155, 0))
colnames(chr.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-16"),by=1)))
chr.nest.mat[,1] <- chr.active2$Checked.[2:60]
View(chr.nest.mat)
View(chr.nest.mat)
i=1
# get start and end dates
period <- dates2[i, ]
View(period)
# get vector of column names (dates)
mat.colnames <- colnames(chr.nest.mat)
# get column numbers
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# fill in row of nest.mat
chr.nest.mat[chr.nest.mat$nest == period$nest, start:stop] <- 1
View(chr.nest.mat)
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# get start and end dates
period <- chr.dates2[i, ]
# get vector of column names (dates)
mat.colnames <- colnames(chr.nest.mat)
# get column numbers
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# fill in row of nest.mat
chr.nest.mat[chr.nest.mat$nest == period$nest, start:stop] <- 1
View(chr.nest.mat)
# make matrix where columns are days and rows are nests
chr.nest.mat <- as.data.frame(matrix(nrow=nests.chr, ncol=155, 0))
colnames(chr.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-16"),by=1)))
chr.nest.mat[,1] <- chr.active2$Checked.[2:60]
for (i in 1:length(chr.dates2$nest)) {
# get start and end dates
period <- chr.dates2[i, ]
# get vector of column names (dates)
mat.colnames <- colnames(chr.nest.mat)
# get column numbers
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# fill in row of nest.mat
chr.nest.mat[chr.nest.mat$nest == period$nest, start:stop] <- 1
}
View(chr.nest.mat)
# get column sums
chr.ColSums <- colSums(chr.nest.mat[,2:155])
# add to nest matrix
chr.nest.mat.sum <- rbind(chr.nest.mat, c(NA, chr.ColSums))
View(chr.nest.mat.sum)
chr.toplot <- data.frame(date = ymd(colnames(chr.nest.mat[-1])),
active = chr.ColSums)
View(chr.toplot)
# bar plot to see when max number of active nests occur
ggplot(chr.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
chr.max <- max(ColSums)
chr.max <- max(chr.ColSums)
# load Blue Cloud data
bc <- read.csv("Blue Cloud 2022_nest check.csv")
View(bc)
View(bc)
# delete extra row two
bc2 <- bc[-c(2),]
View(bc2)
# check cells for "CI" and "X"
bc.active.index <- as.data.frame(which(bc2 == "CI" |
bc2 == "X" |
bc2=="x", arr.ind = T))
View(bc.active.index)
bc.active <- bc2[c(1,unique(bc.active.index$row)),]
View(bc.active)
colnames(bc.active)[2:155] <- bc.active[1,2:155]
colnames(bc.active)[2:154] <- bc.active[1,2:154]
View(bc.active)
# for each active nest, pull out CI dates and X dates
# storage
bc.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
nests.bc <- length(bc.active2$Checked.)-1
nests.bc <- length(bc.active$Checked.)-1
# for each active nest, pull out CI dates and X dates
# storage
bc.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
nests.bc <- length(bc.active$Checked.)-1
for (i in 2:nests.bc) {
# get CI dates
index.ci <- which(bc.active[i,] == "CI")
dates.ci <- colnames(bc.active)[index.ci]
# get inactive dates
index.x <- which(bc.active[i,] == "X" | bc.active[i,]=="x")
dates.x <- colnames(bc.active[index.x])
# number of needed rows
size <- length(index.ci)
# fill in storage
dates.temp <- data.frame(nest=rep(NA,size), CI.date=rep(NA,size),
X.date=rep(NA,size))
dates.temp$nest <- bc.active[i,1]
dates.temp$CI.date <- dates.ci
dates.temp$X.date <- dates.x
# combine with external storage
bc.dates <- rbind(bc.dates, dates.temp)
}
View(bc.dates)
View(bc.dates)
# remove extra row from dates
bc.dates2 <- bc.dates[-1,]
bc.dates2$CI.date <- as.Date(as.factor(bc.dates2$CI.date), format="%d-%b-%y")
bc.dates2$X.date <- as.Date(as.factor(bc.dates2$X.date), format="%d-%b-%y")
View(bc.dates2)
# make matrix where columns are days and rows are nests
bc.nest.mat <- as.data.frame(matrix(nrow=nests.bc, ncol=154, 0))
colnames(bc.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-15"),by=1)))
bc.nest.mat[,1] <- bc.active2$Checked.[2:13]
bc.nest.mat[,1] <- bc.active$Checked.[2:13]
for (i in 1:length(bc.dates2$nest)) {
# get start and end dates
period <- bc.dates2[i, ]
# get vector of column names (dates)
mat.colnames <- colnames(bc.nest.mat)
# get column numbers
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# fill in row of nest.mat
bc.nest.mat[bc.nest.mat$nest == period$nest, start:stop] <- 1
}
View(bc.nest.mat)
# get column sums
bc.ColSums <- colSums(bc.nest.mat[,2:154])
# add to nest matrix
bc.nest.mat.sum <- rbind(bc.nest.mat, c(NA, bc.ColSums))
bc.toplot <- data.frame(date = ymd(colnames(bc.nest.mat[-1])),
active = bc.ColSums)
# bar plot to see when max number of active nests occur
ggplot(bc.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
bc.max <- max(bc.ColSums)
# load cooks data
cook <- read.csv("Cooks 2022_nest check.csv")
# delete extra row two
cook2 <- cook[-c(2),]
View(cook2)
# check cells for "CI" and "X"
cook.active.index <- as.data.frame(which(cook2 == "CI" |
cook2 == "X" |
cook2=="x", arr.ind = T))
cook.active <- cook2[c(1,unique(cook.active.index$row)),]
colnames(cook.active)[2:154] <- cook.active[1,2:154]
View(cook.active.index)
View(cook.active)
colnames(cook.active)[2:155] <- cook.active[1,2:155]
# for each active nest, pull out CI dates and X dates
# storage
cook.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
nests.cook <- length(cook.active$Checked.)-1
for (i in 2:nests.cook) {
# get CI dates
index.ci <- which(cook.active[i,] == "CI")
dates.ci <- colnames(cook.active)[index.ci]
# get inactive dates
index.x <- which(cook.active[i,] == "X" | cook.active[i,]=="x")
dates.x <- colnames(cook.active[index.x])
# number of needed rows
size <- length(index.ci)
# fill in storage
dates.temp <- data.frame(nest=rep(NA,size), CI.date=rep(NA,size),
X.date=rep(NA,size))
dates.temp$nest <- cook.active[i,1]
dates.temp$CI.date <- dates.ci
dates.temp$X.date <- dates.x
# combine with external storage
cook.dates <- rbind(cook.dates, dates.temp)
}
View(cook.dates)
View(cook.active)
ymd("2022-09-22") - ymd("2022-04-16")
# remove extra row from dates
cook.dates2 <- cook.dates[-1,]
cook.dates2$CI.date <- as.Date(as.factor(cook.dates2$CI.date), format="%d-%b-%y")
cook.dates2$X.date <- as.Date(as.factor(cook.dates2$X.date), format="%d-%b-%y")
View(cook.dates2)
# make matrix where columns are days and rows are nests
cook.nest.mat <- as.data.frame(matrix(nrow=nests.cook, ncol=161, 0))
colnames(cook.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-22"),by=1)))
cook.nest.mat[,1] <- cook.active$Checked.[2:16]
View(cook.nest.mat)
for (i in 1:length(cook.dates2$nest)) {
# get start and end dates
period <- cook.dates2[i, ]
# get vector of column names (dates)
mat.colnames <- colnames(cook.nest.mat)
# get column numbers
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# fill in row of nest.mat
cook.nest.mat[cook.nest.mat$nest == period$nest, start:stop] <- 1
}
View(cook.nest.mat)
# get column sums
cook.ColSums <- colSums(cook.nest.mat[,2:161])
# add to nest matrix
cook.nest.mat.sum <- rbind(cook.nest.mat, c(NA, cook.ColSums))
cook.toplot <- data.frame(date = ymd(colnames(cook.nest.mat[-1])),
active = cook.ColSums)
# bar plot to see when max number of active nests occur
ggplot(cook.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
cook.max <- max(cook.ColSums) # 7 active nests in 1st brood, 9 total
# load data
st <- read.csv("Struthers 2022_nest check.csv")
View(st)
View(cook)
# delete extra row two
st2 <- st[-c(2),]
# check cells for "CI" and "X"
st.active.index <- as.data.frame(which(st2 == "CI" |
st2 == "X" |
st2=="x", arr.ind = T))
st.active <- st2[c(1,unique(st.active.index$row)),]
colnames(st.active)[2:155] <- st.active[1,2:155]
View(st.active)
# for each active nest, pull out CI dates and X dates
# storage
st.dates <- data.frame(nest=NA, CI.date=NA, X.date=NA)
nests.st <- length(st.active$Checked.)-1
for (i in 2:nests.st) {
# get CI dates
index.ci <- which(st.active[i,] == "CI")
dates.ci <- colnames(st.active)[index.ci]
# get inactive dates
index.x <- which(st.active[i,] == "X" | st.active[i,]=="x")
dates.x <- colnames(st.active[index.x])
# number of needed rows
size <- length(index.ci)
# fill in storage
dates.temp <- data.frame(nest=rep(NA,size), CI.date=rep(NA,size),
X.date=rep(NA,size))
dates.temp$nest <- st.active[i,1]
dates.temp$CI.date <- dates.ci
dates.temp$X.date <- dates.x
# combine with external storage
st.dates <- rbind(st.dates, dates.temp)
}
View(st.dates)
# remove extra row from dates
st.dates2 <- st.dates[-1,]
st.dates2$CI.date <- as.Date(as.factor(st.dates2$CI.date), format="%d-%b-%y")
st.dates2$X.date <- as.Date(as.factor(st.dates2$X.date), format="%d-%b-%y")
View(st.dates2)
# make matrix where columns are days and rows are nests
st.nest.mat <- as.data.frame(matrix(nrow=nests.st, ncol=155, 0))
colnames(st.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-22"),by=1)))
colnames(st.nest.mat) <- c("nest", as.character(seq(ymd("2022-04-16"),
ymd("2022-09-16"),by=1)))
st.nest.mat[,1] <- st.active$Checked.[2:5]
st.nest.mat[,1] <- st.active$Checked.[2:6]
for (i in 1:length(st.dates2$nest)) {
# get start and end dates
period <- st.dates2[i, ]
# get vector of column names (dates)
mat.colnames <- colnames(st.nest.mat)
# get column numbers
start <- which(mat.colnames == as.character(period$CI.date))
stop <- which(mat.colnames == as.character(period$X.date))
# fill in row of nest.mat
st.nest.mat[st.nest.mat$nest == period$nest, start:stop] <- 1
}
View(st.nest.mat)
# get column sums
st.ColSums <- colSums(st.nest.mat[,2:155])
# add to nest matrix
st.nest.mat.sum <- rbind(st.nest.mat, c(NA, st.ColSums))
st.toplot <- data.frame(date = ymd(colnames(st.nest.mat[-1])),
active = st.ColSums)
# bar plot to see when max number of active nests occur
ggplot(st.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
# read in data
ufg <- read.csv("Urban Farm Girlz 2022_nest check.csv")
# delete extra row two
ufg2 <- ufg[-c(2),]
# check cells for "CI" and "X"
ufg.active.index <- as.data.frame(which(ufg2 == "CI" |
ufg2 == "X" |
ufg2=="x", arr.ind = T))
ufg.active <- ufg2[c(1,unique(ufg.active.index$row)),]
colnames(ufg.active)[2:155] <- ufg.active[1,2:155]
View(ufg.active)
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
# bar plot to see when max number of active nests occur
ggplot(toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Make Believe active nests across time 2022")
ggsave("Make Believe active nests over time 2022.png")
ggsave("Make Believe active nests over time 2022.png", h=5, w=6)
ggsave("Make Believe active nests over time 2022.png", h=4, w=5)
mb.max <- max(ColSums)
# bar plot to see when max number of active nests occur
ggplot(chr.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
# bar plot to see when max number of active nests occur
ggplot(chr.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("CHR active nests over time 2022")
ggsave("CHR active nests over time 2022.png", h=4, w=5)
# bar plot to see when max number of active nests occur
ggplot(bc.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
# bar plot to see when max number of active nests occur
ggplot(bc.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Blue Cloud active nests over time 2022")
ggsave("Blud Cloud active nests over time 2022.png" h=4, w=5)
ggsave("Blud Cloud active nests over time 2022.png", h=4, w=5)
cook.toplot <- data.frame(date = ymd(colnames(cook.nest.mat[-1])),
active = cook.ColSums)
cook.toplot <- data.frame(date = ymd(colnames(cook.nest.mat[-1])),
active = cook.ColSums)
# bar plot to see when max number of active nests occur
ggplot(cook.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
# bar plot to see when max number of active nests occur
ggplot(cook.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Cooks active nests over time 2022")
# bar plot to see when max number of active nests occur
ggplot(cook.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Cooks active nests over time 2022") + ylim(0,10)
# bar plot to see when max number of active nests occur
ggplot(cook.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Cooks active nests over time 2022") + ylim(0,9)
# bar plot to see when max number of active nests occur
ggplot(cook.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Cooks active nests over time 2022") + ylim(0,11)
ggsave("Cooks active nests over time 2022.png", h=4, w=5)
# bar plot to see when max number of active nests occur
ggplot(st.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red")
# bar plot to see when max number of active nests occur
ggplot(st.toplot, aes(x=date, y=active)) + geom_point() + geom_line() +
geom_vline(xintercept = ymd("2022-06-20"), color="red") +
ggtitle("Struthers active nests over time 2022")
ggsave("Struthers active nests over time 2022.png", h=4, w=5)
